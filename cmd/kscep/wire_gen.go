// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"kscep/internal/biz"
	"kscep/internal/conf"
	"kscep/internal/data"
	"kscep/internal/server"
	"kscep/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	helloWorldUsecase := biz.NewHelloWorldUsecase(logger)
	helloWorldService := service.NewHelloWorldService(helloWorldUsecase, logger)
	dataData, cleanup, err := data.NewData(confData, logger)
	if err != nil {
		return nil, nil, err
	}
	scepcaRepo := data.NewSCEPCARepo(confData, dataData, logger)
	scepcaUsecase := biz.NewSCEPCAUsecase(scepcaRepo, logger)
	csrSignerUsecase := biz.NewCSRSignerUsecase(confData, logger)
	scepUsecase := biz.NewSCEPUsecase(scepcaUsecase, csrSignerUsecase, logger)
	scepService := service.NewSCEPService(scepUsecase, logger)
	httpServer := server.NewGinhttpServer(confServer, logger, helloWorldService, scepService)
	app := newApp(logger, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
